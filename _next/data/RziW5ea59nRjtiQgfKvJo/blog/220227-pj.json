{"pageProps":{"post":{"frontmatter":{"title":"사이드 프로젝트를 하며 배운 것들을 적어보자!","date":"2022-02-27 02:00","tags":["til"],"category":"blog","author":"Hailey Park","description":null},"body":"\n개인 프로젝트를 하며 느낀 것들로, 계속 추가중!!\nLast updated: 2022/03/11\n\n## Devops (git)\n\n1. feature(기능)별로 branch를 만들자.\ne.g. 회원가입 개발용 브랜치(feat/Join), 로그인 개발용 브랜치(feat/Login)\n\n## 프론트엔드 설계\n\n1. 백엔드 API 명세서에 맞게 리액트 컴포넌트 구조를 설계하자. **단일 책임의 원칙**\n    e.g. 유저의 프로필 이미지를 표시하는 컴포넌트가 **이미지가 없을 때 랜덤 이미지까지 생성한다면 단일 책임 원칙 위반**임.\n2. 페이지를 나눌 수 없을 때까지 쪼개서 재사용성 극대화 (아토믹 디자인)\n3. 내용물(비즈니스 로직)과 껍데기(UI Component)를 분리하고 상태 주입을 위한 컴포넌트를 이용해 주입\n\n리액트 컴포넌트 설계 패턴 참고할 것\n\n## HTML, CSS 관련\n\n- 크게 들어가는 border가 많아지는 건 자제하자. 원래 메인화면에서 화면 전체를 아우르는 border가 3개 있었는데 이 세개의 길이를 맞추는게 쉽지 않다.\n- width를 반응형 변수로 지정해줄 땐 최대한 max-width를 (px) 함께 넣어주는게 좋은가?\n\n## React \n\n### 프로젝트 만드는 순서\n\n- create-react-app 하고 components, store(for Redux), 하위 디렉토리 만들기\n- store dir 안에 index.js를 만든다. root reducer 역할을 함. \n- store 아래 modules dir를 만든다. 그리고 액션 타입과 액션 생성 함수를 만든다.","slug":"220227-pj"},"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      h2: \"h2\",\n      ol: \"ol\",\n      li: \"li\",\n      strong: \"strong\",\n      ul: \"ul\",\n      h3: \"h3\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"개인 프로젝트를 하며 느낀 것들로, 계속 추가중!!\\nLast updated: 2022/03/11\"\n      }), \"\\n\", _jsx(_components.h2, {\n        id: \"devops-git\",\n        children: \"Devops (git)\"\n      }), \"\\n\", _jsxs(_components.ol, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"feature(기능)별로 branch를 만들자.\\ne.g. 회원가입 개발용 브랜치(feat/Join), 로그인 개발용 브랜치(feat/Login)\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        id: \"프론트엔드-설계\",\n        children: \"프론트엔드 설계\"\n      }), \"\\n\", _jsxs(_components.ol, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"백엔드 API 명세서에 맞게 리액트 컴포넌트 구조를 설계하자. \", _jsx(_components.strong, {\n            children: \"단일 책임의 원칙\"\n          }), \"\\ne.g. 유저의 프로필 이미지를 표시하는 컴포넌트가 \", _jsx(_components.strong, {\n            children: \"이미지가 없을 때 랜덤 이미지까지 생성한다면 단일 책임 원칙 위반\"\n          }), \"임.\"]\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"페이지를 나눌 수 없을 때까지 쪼개서 재사용성 극대화 (아토믹 디자인)\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"내용물(비즈니스 로직)과 껍데기(UI Component)를 분리하고 상태 주입을 위한 컴포넌트를 이용해 주입\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"리액트 컴포넌트 설계 패턴 참고할 것\"\n      }), \"\\n\", _jsx(_components.h2, {\n        id: \"html-css-관련\",\n        children: \"HTML, CSS 관련\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"크게 들어가는 border가 많아지는 건 자제하자. 원래 메인화면에서 화면 전체를 아우르는 border가 3개 있었는데 이 세개의 길이를 맞추는게 쉽지 않다.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"width를 반응형 변수로 지정해줄 땐 최대한 max-width를 (px) 함께 넣어주는게 좋은가?\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        id: \"react\",\n        children: \"React\"\n      }), \"\\n\", _jsx(_components.h3, {\n        id: \"프로젝트-만드는-순서\",\n        children: \"프로젝트 만드는 순서\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"create-react-app 하고 components, store(for Redux), 하위 디렉토리 만들기\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"store dir 안에 index.js를 만든다. root reducer 역할을 함.\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"store 아래 modules dir를 만든다. 그리고 액션 타입과 액션 생성 함수를 만든다.\"\n        }), \"\\n\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"headings":[{"text":"Devops (git)","link":"#devops_(git)"},{"text":"프론트엔드 설계","link":"#프론트엔드_설계"},{"text":"HTML, CSS 관련","link":"#html,_css_관련"},{"text":"React ","link":"#react_"}]},"__N_SSG":true}
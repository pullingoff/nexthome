{"pageProps":{"post":{"frontmatter":{"title":"20년 5월 둘째주 개발학원에서 공부한 것 기록","date":"2020-05-08 08:00","tags":["대덕인재개발원","국비학원"],"category":"blog","description":"국비 개발학원 2020년 5월"},"body":"\n# 한 주간 배운 것 중 가장\n\n## 기억에 남는 것\n\n- 학원에서 깜짝 SQL 시험 본 것과 자바의 상속(inheritance) \n- SQL emp, dept 테이블에서 `WHERE dept.deptno != emp.deptno `를 하면 행이 몇개가 나오냐는 문제였다. 어떻게 저런데 조인을 하지? 했다가 14*3 = 42로 고쳤다. \n- inheritance가 기억에 남았던 이유는 내가 자바 코드를 읽을 때 extends 가 나오는 부분을 많이 봤는데 그게 상속 기능이었다는 것을 드디어 알았기 때문이었다.\n\n## 낯설었던 것\n\n이번주 초에는 객체지향이라는 것을 아직 이해하지 못한 상태였다. 메소드는 함수같이 쓰이는 것이다-는 알고 있었지만 클래스를 어떨 때 써야할지 몰랐는데 과제로 프로그램을 만들어보고 계속 써보면서 이해했다. 클래스 안에 메서드가 들어가고 메서드는 그 클래스에서 사용할 함수들을 표시해주는 것.\n\n## 유용해보이는 것\n\n자바의 상속 기능. 비슷한 클래스를 여러개 쓸 필요 없이 상속받아 쓸 수 있다는게 유용해보인다. super()로 parent class의 생성자를 불러올 수도 있는데 이것도 자식 클래스에게 새로운 옵션을 주는 것 같아 유용해보임.","slug":"200508-dd"},"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      h2: \"h2\",\n      ul: \"ul\",\n      li: \"li\",\n      code: \"code\",\n      p: \"p\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.h1, {\n        id: \"한-주간-배운-것-중-가장\",\n        children: \"한 주간 배운 것 중 가장\"\n      }), \"\\n\", _jsx(_components.h2, {\n        id: \"기억에-남는-것\",\n        children: \"기억에 남는 것\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"학원에서 깜짝 SQL 시험 본 것과 자바의 상속(inheritance)\"\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"SQL emp, dept 테이블에서 \", _jsx(_components.code, {\n            children: \"WHERE dept.deptno != emp.deptno \"\n          }), \"를 하면 행이 몇개가 나오냐는 문제였다. 어떻게 저런데 조인을 하지? 했다가 14*3 = 42로 고쳤다.\"]\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"inheritance가 기억에 남았던 이유는 내가 자바 코드를 읽을 때 extends 가 나오는 부분을 많이 봤는데 그게 상속 기능이었다는 것을 드디어 알았기 때문이었다.\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        id: \"낯설었던-것\",\n        children: \"낯설었던 것\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"이번주 초에는 객체지향이라는 것을 아직 이해하지 못한 상태였다. 메소드는 함수같이 쓰이는 것이다-는 알고 있었지만 클래스를 어떨 때 써야할지 몰랐는데 과제로 프로그램을 만들어보고 계속 써보면서 이해했다. 클래스 안에 메서드가 들어가고 메서드는 그 클래스에서 사용할 함수들을 표시해주는 것.\"\n      }), \"\\n\", _jsx(_components.h2, {\n        id: \"유용해보이는-것\",\n        children: \"유용해보이는 것\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"자바의 상속 기능. 비슷한 클래스를 여러개 쓸 필요 없이 상속받아 쓸 수 있다는게 유용해보인다. super()로 parent class의 생성자를 불러올 수도 있는데 이것도 자식 클래스에게 새로운 옵션을 주는 것 같아 유용해보임.\"\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"headings":[{"text":"기억에 남는 것","link":"#기억에_남는_것"},{"text":"낯설었던 것","link":"#낯설었던_것"},{"text":"유용해보이는 것","link":"#유용해보이는_것"}]},"__N_SSG":true}